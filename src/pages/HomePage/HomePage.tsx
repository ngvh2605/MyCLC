import {
  IonContent,
  IonFab,
  IonFabButton,
  IonHeader,
  IonIcon,
  IonItem,
  IonLabel,
  IonList,
  IonPage,
  IonTitle,
  IonToolbar,
  IonThumbnail,
  IonImg,
  IonButtons,
  IonMenuButton,
  IonMenu,
  IonButton,
  IonInfiniteScroll,
  IonCard,
  IonCardHeader,
  IonInfiniteScrollContent,
  useIonViewWillEnter,
  IonAlert,
  IonCardTitle,
  IonCardSubtitle,
  IonCardContent,
  IonAvatar,
  IonGrid,
  IonRow,
  IonCol,
  IonBadge,
  IonChip,
  IonLoading,
  IonProgressBar,
  IonSpinner,
  IonSkeletonText,
} from "@ionic/react";
import {
  add as addIcon,
  mailOutline,
  mailUnreadOutline,
  notificationsOutline,
  pin,
  sparkles,
  walk,
  warning,
  wifi,
  wine,
} from "ionicons/icons";
import React, { useState, useEffect } from "react";
import { useAuth } from "../../auth";
import { formatDate } from "../../date";
import { firestore } from "../../firebase";
import { News, toNews, Comment, toComment } from "../../models";
import { auth as firebaseAuth } from "../../firebase";
import {
  getNew,
  getComment,
  getLikedNewByUserId,
  getLikedUserByNewId,
  likeNews,
} from "./services";
const HomePage: React.FC = () => {
  const { userId } = useAuth();

  const [showAlert, setShowAlert] = useState(false);
  const [alertHeader, setAlertHeader] = useState("");
  const [alertMessage, setAlertMessage] = useState("");
  const [loading, setLoading] = useState(false);

  const [news, setNews] = useState<News[]>([]);

  const test = async () => {
    const a = await getLikedNewByUserId(userId); //l·∫•y ra nh·ªØng b√†i ƒë√£ like c·ªßa user hi·ªán t·∫°i
    const b = await getLikedUserByNewId("HCtGShJ3gaSJ8n1x2VuW"); //l·∫•y ra danh s√°ch nh·ªØng ng∆∞·ªùi ƒë√£ like b√†i vi·∫øt n√†y
    console.log(a, b);
    likeNews(userId, "HCtGShJ3gaSJ8n1x2VuW"); //like b√†i vi·∫øt
    b.forEach((post) => {
      if (post.id === userId) console.log(true);
    });
  };

  useEffect(() => {
    const fetchNews = async () => {
      setLoading(true);
      const temp = await getNew();
      let array: News[] = [];
      for (const item of temp) {
        array.push({ ...item, comment: await getComment(item.id) });
      }
      setLoading(false);
      setNews(array);

      // test here
      test();
    };
    fetchNews();
  }, []); //user id ko thay ƒë·ªïi trong su·ªët phi√™n l√†m vi·ªác n√™n ko c·∫ßn cho v√†o ƒë√¢y

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonButtons slot="start">
            <IonMenuButton />
          </IonButtons>
          <IonTitle>CLC News</IonTitle>
          <IonButtons slot="end">
            <IonButton
              onClick={() => {
                setAlertHeader("H√≤m th∆∞");
                setAlertMessage(
                  "C·∫£m ∆°n b·∫°n ƒë√£ th·ª≠ ·∫•n v√†o ƒë√¢y! Ch·ª©c nƒÉng n√†y s·∫Ω ƒë∆∞·ª£c ra m·∫Øt trong th·ªùi gian t·ªõi. H√£y c√πng ƒë√≥n ch·ªù nh√©!"
                );
                setShowAlert(true);
              }}
            >
              <IonIcon icon={mailUnreadOutline} color="primary" />
            </IonButton>
          </IonButtons>
        </IonToolbar>
      </IonHeader>
      {!loading ? (
        <IonContent className="ion-padding">
          <IonChip
            color="primary"
            style={{ height: "max-content", marginBottom: 10 }}
            className="ion-margin"
            hidden={
              !(
                firebaseAuth.currentUser.metadata.creationTime ===
                firebaseAuth.currentUser.metadata.lastSignInTime
              )
            }
          >
            <IonLabel text-wrap className="ion-padding">
              Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n th√†nh c√¥ng! H√£y v√†o H·ªì s∆° v√†
              th·ª±c hi·ªán ƒë·ªß 3 b∆∞·ªõc x√°c minh ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c ch·ª©c nƒÉng kh√°c
              c·ªßa MyCLC nh√©!
            </IonLabel>
          </IonChip>

          <IonButton onClick={() => console.log(news)}>Why</IonButton>
          {news.map((item, index) => (
            <IonLabel key={index}>Here</IonLabel>
          ))}
          {news.map((item, index) => (
            <IonCard key={index}>
              <IonButton onClick={() => console.log(item)}>Why</IonButton>
              <IonImg src={item.pictureUrl} />

              <IonItem lines="none" style={{ marginTop: 10, marginBottom: 10 }}>
                <IonAvatar slot="start">
                  <IonImg src="/assets/image/MultiLogo.png" />
                </IonAvatar>
                <IonChip color="primary" slot="end">
                  <IonLabel style={{ verticalAlign: "middle" }}>
                    <span style={{ fontSize: "small" }}>Club</span>
                  </IonLabel>
                </IonChip>
                <IonLabel text-wrap color="dark">
                  <p>
                    <b>CLC Multimedia</b>
                  </p>
                  <IonLabel color="medium">
                    {item.timestamp.toString()}
                  </IonLabel>
                </IonLabel>
              </IonItem>
              <IonCardContent style={{ paddingTop: 0 }}>
                <IonCardSubtitle color="primary">{item.title}</IonCardSubtitle>
                <IonLabel color="dark" text-wrap>
                  {item.body}
                </IonLabel>
              </IonCardContent>
              <IonList>
                {item.comment &&
                  item.comment.map((comment, index) => (
                    <IonItem key={index}>
                      <IonLabel>{comment.body}</IonLabel>
                    </IonItem>
                  ))}
              </IonList>
            </IonCard>
          ))}

          <IonCard>
            <IonImg src="https://firebasestorage.googleapis.com/v0/b/myclcproject.appspot.com/o/public%2F%5BMyCLC%5D-Post1%20(1).png?alt=media&token=8c5a4ac1-81a9-4990-b632-30456a8e0156" />

            <IonItem lines="none" style={{ marginTop: 10, marginBottom: 10 }}>
              <IonAvatar slot="start">
                <IonImg src="/assets/image/MultiLogo.png" />
              </IonAvatar>
              <IonChip color="primary" slot="end">
                <IonLabel style={{ verticalAlign: "middle" }}>
                  <span style={{ fontSize: "small" }}>Club</span>
                </IonLabel>
              </IonChip>
              <IonLabel text-wrap color="dark">
                <p>
                  <b>CLC Multimedia</b>
                </p>
                <IonLabel color="medium">28/08/2021 ‚Ä¢ 11:20</IonLabel>
              </IonLabel>
            </IonItem>
            <IonCardContent style={{ paddingTop: 0 }}>
              <IonCardSubtitle color="primary">
                M·ªü ƒëƒÉng k√Ω s·ªõm MyCLC
              </IonCardSubtitle>
              <IonLabel color="dark" text-wrap>
                üåê Tr∆∞·ªõc s·ª± thay ƒë·ªïi ch√≥ng m·∫∑t c·ªßa th·ªùi ƒë·∫°i c√¥ng ngh·ªá 4.0, CLC
                Multimedia ƒë√£ ph·ªëi h·ª£p v·ªõi c√°c anh ch·ªã c·ª±u h·ªçc sinh ƒëang l√† sinh
                vi√™n ng√†nh CNTT trong v√† ngo√†i n∆∞·ªõc ƒë·ªÉ ph√°t tri·ªÉn m·ªôt ·ª©ng d·ª•ng
                d√†nh ri√™ng cho C·ªông ƒë·ªìng THPT Chuy√™n L√†o Cai - MyCLC
                <br />
                üëâ Sau m·ªôt th·ªùi gian d√†i nghi√™n c·ª©u v√† x√¢y d·ª±ng, h√¥m nay MyCLC
                ch√≠nh th·ª©c ra m·∫Øt v√† m·ªü ƒëƒÉng k√Ω t√†i kho·∫£n
                <br />
                üíé Nh√≥m d·ª± √°n r·∫•t mong nh·∫≠n ƒë∆∞·ª£c s·ª± ·ªßng h·ªô ƒë√¥ng ƒë·∫£o c·ªßa c√°c th·∫ø
                h·ªá h·ªçc sinh CLCer b·∫±ng c√°ch ƒëƒÉng k√Ω tham gia v√† g·ª≠i nh·ªØng ph·∫£n
                h·ªìi, g√≥p √Ω v√† b√°o l·ªói v·ªÅ cho CLC Multimedia. B·∫°n mong mu·ªën MyCLC
                s·∫Ω c√≥ nh·ªØng t√≠nh nƒÉng g√¨ trong th·ªùi gian s·∫Øp t·ªõi, h√£y cho ch√∫ng
                m√¨nh bi·∫øt nh√© üòò
                <br />
                üí• L∆∞u √Ω: Trong ƒë·ª£t ƒëƒÉng k√≠ s·ªõm l·∫ßn n√†y MyCLC s·∫Ω ch·ªâ ph√°t h√†nh
                tr√™n n·ªÅn t·∫£ng web. Sau khi ho√†n thi·ªán ƒë·∫ßy ƒë·ªß c√°c t√≠nh nƒÉng,
                thu·∫≠n l·ª£i h∆°n trong vi·ªác s·ª≠ d·ª•ng, MyCLC s·∫Ω ƒë∆∞·ª£c ƒëƒÉng t·∫£i l√™n App
                Store v√† CH Play
              </IonLabel>
            </IonCardContent>
          </IonCard>

          {/*  
        <IonFab vertical="bottom" horizontal="end" slot="fixed">
          <IonFabButton routerLink="/my/entries/add">
            <IonIcon icon={addIcon} />
          </IonFabButton>
        </IonFab>
        */}
        </IonContent>
      ) : (
        <IonContent>
          <IonCard>
            <IonItem lines="none" style={{ marginTop: 10, marginBottom: 10 }}>
              <IonAvatar slot="start">
                <IonSkeletonText animated />
              </IonAvatar>
              <IonChip color="primary" slot="end">
                <IonLabel style={{ verticalAlign: "middle" }}>...</IonLabel>
              </IonChip>
              <IonLabel text-wrap color="dark">
                <p>
                  <IonSkeletonText animated style={{ width: "50%" }} />
                </p>
                <IonLabel color="medium">
                  <IonSkeletonText animated style={{ width: "30%" }} />
                </IonLabel>
              </IonLabel>
            </IonItem>
            <IonCardContent style={{ paddingTop: 0 }}>
              <IonCardSubtitle color="primary">
                <IonSkeletonText animated style={{ width: "100%" }} />
              </IonCardSubtitle>
              <IonLabel color="dark" text-wrap>
                <IonSkeletonText animated style={{ width: "100%" }} />
                <IonSkeletonText animated style={{ width: "100%" }} />
                <IonSkeletonText animated style={{ width: "100%" }} />
                <IonSkeletonText animated style={{ width: "100%" }} />
              </IonLabel>
            </IonCardContent>
          </IonCard>
        </IonContent>
      )}
      <IonAlert
        isOpen={showAlert}
        onDidDismiss={() => setShowAlert(false)}
        cssClass="my-custom-class"
        header={alertHeader}
        message={alertMessage}
        buttons={["OK"]}
      />
    </IonPage>
  );
};

export default HomePage;
